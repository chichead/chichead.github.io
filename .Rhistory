labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.1) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = -.2, vjust = -.6) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1.2, vjust = -.6) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = -.2, vjust = -.6) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1.2, vjust = -.6) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.7) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = -.2, vjust = -.6) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1.2, vjust = -.6) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.7) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = -.5, vjust = -.6) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1.5, vjust = -.6) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = -.2, vjust = -.7) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1.2, vjust = -.7) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = -.2, vjust = -.8) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1.2, vjust = -.7) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = -.2, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1.2, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1.2, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
install.packages(kable)
install.packages("kable")
library(kable)
df <- tibble(country = c("Korea", "Korea", "Korea", "Japan", "Japan", "Japan", "China", "China", "China", "Russia", "Russia", "Russia", "India", "India", "India"),
year = c(2020, 2021, 2022, 2020, 2021, 2022, 2020, 2021, 2022, 2020, 2021, 2022, 2020, 2021, 2022),
value = c(500, 200, 100, 400, 300, 400, 200, 400, 200, 500, 400, 300, 300, 300, 100))
df <- df %>%
group_by(year) %>%
mutate(rank = rank(value, ties.method = "random")) %>%
ungroup()
ggplot(df, aes(year, rank, color = country)) +
geom_bump() +
theme_classic() +
theme(legend.position = "none") +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
View(df)
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(1, 5.5)) +
scale_y_reverse() +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(0, 5.5)) +
scale_y_reverse() +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(-₩, 5.5)) +
scale_y_reverse() +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_continuous(limits = c(-1, 5.5)) +
scale_y_reverse() +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_reverse() +
scale_y_continuous(limits = c(-1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_reverse() +
#scale_y_continuous(limits = c(-1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_reverse(limits = c(0, 5)) +
#scale_y_continuous(limits = c(-1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_reverse(limits = c(1, 5)) +
#scale_y_continuous(limits = c(-1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_reverse(limits = c(5, 0)) +
#scale_y_continuous(limits = c(-1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
ggplot(df, aes(year, rank, color = country)) +
geom_bump(size = 5, smooth = 8, alpha = 0.8) +
geom_point(size = 5) +
geom_text(data = df %>% filter(year == min(year)),
aes(x = year, label = country), size = 5, hjust = 0, vjust = -1) +
geom_text(data = df %>% filter(year == max(year)),
aes(x = year, label = country), size = 5, hjust = 1, vjust = -1) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major = element_blank()) +
scale_x_continuous(limits = c(2019.95, 2022.05),
breaks = seq(2020, 2022, 1)) +
scale_y_reverse(limits = c(5, 0.5)) +
#scale_y_continuous(limits = c(-1, 5.5)) +
labs(y = "RANK",
x = NULL) +
scale_color_manual(values = wes_palette("Zissou1", n = 5))
install.packages("geofacet")
library(geofacet)
library(tidyverse)
library(distill)
distill::create_post("geofacet_package")
mygrid <- data.frame(
code = c("42780", "42790", "42800", "42820", "41150", "41250", "41630", "41650", "41800", "42110", "42210", "42810", "11320", "11350", "41281", "41285", "41360", "42720", "42730", "42830", "11290", "11305", "41287", "41310", "41450", "41570", "41820", "42150", "42770", "11110", "11230", "11260", "11410", "41171", "41210", "41830", "42170", "42190", "11140", "11200", "11380", "11440", "11740", "28710", "41173", "41480", "41670", "42130", "42230", "11170", "11215", "11500", "11590", "11710", "28260", "41190", "41390", "41500", "42760", "47930", "11470", "11620", "11650", "28140", "28245", "41133", "41271", "41290", "41610", "42750", "47770", "11545", "11560", "11680", "28237", "41131", "41135", "41273", "41465", "47280", "47920", "47940", "11530", "28110", "28177", "41117", "41410", "41430", "41461", "41463", "41590", "47170", "47760", "28185", "28200", "28720", "41111", "41113", "41220", "41370", "43150", "47113", "47190", "47210", "47750", "47900", "41115", "41550", "43770", "43800", "44131", "44133", "44200", "44825", "47111", "47150", "47250", "47720", "47730", "43113", "43130", "43750", "43760", "44150", "44270", "44800", "44810", "47130", "47230", "47290", "47850", "30230", "31200", "36110", "43114", "43720", "43745", "44180", "44210", "44790", "47820", "47830", "47840", "27110", "27230", "27260", "30110", "31170", "31710", "43111", "43112", "44230", "44250", "44760", "27140", "27170", "27200", "30140", "30200", "31110", "31140", "43730", "43740", "44710", "44770", "26260", "26410", "26710", "27290", "27710", "30170", "45130", "45140", "45730", "48880", "48890", "26230", "26320", "26350", "26470", "45210", "45710", "45740", "45800", "48270", "48740", "48870", "26110", "26170", "26440", "26530", "45113", "45180", "45190", "45720", "45790", "48170", "48720", "26140", "26290", "26380", "45111", "45750", "46870", "46880", "48125", "48330", "48730", "48860", "26200", "26500", "45770", "46710", "46730", "46860", "48121", "48123", "48129", "48250", "48850", "29200", "46230", "46720", "46790", "46840", "46910", "48127", "48220", "48240", "29140", "29170", "46110", "46150", "46170", "46770", "48310", "48820", "48840", "29110", "29155", "46130", "46820", "46830", "46780", "46800", "46810", "46900", "46890", "50110", "50130"),
name = c("강원도 철원군", "강원도 화천군", "강원도 양구군", "강원도 고성군", "경기도 의정부시", "경기도 동두천시", "경기도 양주시", "경기도 포천시", "경기도 연천군", "강원도 춘천시", "강원도 속초시", "강원도 인제군", "서울특별시 도봉구", "서울특별시 노원구", "경기도 고양시 덕양구", "경기도 고양시 일산동구", "경기도 남양주시", "강원도 홍천군", "강원도 횡성군", "강원도 양양군", "서울특별시 성북구", "서울특별시 강북구", "경기도 고양시 일산서구", "경기도 구리시", "경기도 하남시", "경기도 김포시", "경기도 가평군", "강원도 강릉시", "강원도 정선군", "서울특별시 종로구", "서울특별시 동대문구", "서울특별시 중랑구", "서울특별시 서대문구", "경기도 안양시 만안구", "경기도 광명시", "경기도 양평군", "강원도 동해시", "강원도 태백시", "서울특별시 중구", "서울특별시 성동구", "서울특별시 은평구", "서울특별시 마포구", "서울특별시 강동구", "인천광역시 강화군", "경기도 안양시 동안구", "경기도 파주시", "경기도 여주시", "강원도 원주시", "강원도 삼척시", "서울특별시 용산구", "서울특별시 광진구", "서울특별시 강서구", "서울특별시 동작구", "서울특별시 송파구", "인천광역시 서구", "경기도 부천시", "경기도 시흥시", "경기도 이천시", "강원도 평창군", "경상북도 울진군", "서울특별시 양천구", "서울특별시 관악구", "서울특별시 서초구", "인천광역시 동구", "인천광역시 계양구", "경기도 성남시 중원구", "경기도 안산시 상록구", "경기도 과천시", "경기도 광주시", "강원도 영월군", "경상북도 영덕군", "서울특별시 금천구", "서울특별시 영등포구", "서울특별시 강남구", "인천광역시 부평구", "경기도 성남시 수정구", "경기도 성남시 분당구", "경기도 안산시 단원구", "경기도 용인시 수지구", "경상북도 문경시", "경상북도 봉화군", "경상북도 울릉군", "서울특별시 구로구", "인천광역시 중구", "인천광역시 미추홀구", "경기도 수원시 영통구", "경기도 군포시", "경기도 의왕시", "경기도 용인시 처인구", "경기도 용인시 기흥구", "경기도 화성시", "경상북도 안동시", "경상북도 영양군", "인천광역시 연수구", "인천광역시 남동구", "인천광역시 옹진군", "경기도 수원시 장안구", "경기도 수원시 권선구", "경기도 평택시", "경기도 오산시", "충청북도 제천시", "경상북도 포항시 북구", "경상북도 구미시", "경상북도 영주시", "경상북도 청송군", "경상북도 예천군", "경기도 수원시 팔달구", "경기도 안성시", "충청북도 음성군", "충청북도 단양군", "충청남도 천안시 동남구", "충청남도 천안시 서북구", "충청남도 아산시", "충청남도 태안군", "경상북도 포항시 남구", "경상북도 김천시", "경상북도 상주시", "경상북도 군위군", "경상북도 의성군", "충청북도 청주시 흥덕구", "충청북도 충주시", "충청북도 진천군", "충청북도 괴산군", "충청남도 공주시", "충청남도 당진시", "충청남도 홍성군", "충청남도 예산군", "경상북도 경주시", "경상북도 영천시", "경상북도 경산시", "경상북도 칠곡군", "대전광역시 대덕구", "울산광역시 북구", "세종특별자치시", "충청북도 청주시 청원구", "충청북도 보은군", "충청북도 증평군", "충청남도 보령시", "충청남도 서산시", "충청남도 청양군", "경상북도 청도군", "경상북도 고령군", "경상북도 성주군", "대구광역시 중구", "대구광역시 북구", "대구광역시 수성구", "대전광역시 동구", "울산광역시 동구", "울산광역시 울주군", "충청북도 청주시 상당구", "충청북도 청주시 서원구", "충청남도 논산시", "충청남도 계룡시", "충청남도 부여군", "대구광역시 동구", "대구광역시 서구", "대구광역시 남구", "대전광역시 중구", "대전광역시 유성구", "울산광역시 중구", "울산광역시 남구", "충청북도 옥천군", "충청북도 영동군", "충청남도 금산군", "충청남도 서천군", "부산광역시 동래구", "부산광역시 금정구", "부산광역시 기장군", "대구광역시 달서구", "대구광역시 달성군", "대전광역시 서구", "전라북도 군산시", "전라북도 익산시", "전라북도 무주군", "경상남도 거창군", "경상남도 합천군", "부산광역시 부산진구", "부산광역시 북구", "부산광역시 해운대구", "부산광역시 연제구", "전라북도 김제시", "전라북도 완주군", "전라북도 장수군", "전라북도 부안군", "경상남도 밀양시", "경상남도 창녕군", "경상남도 함양군", "부산광역시 중구", "부산광역시 동구", "부산광역시 강서구", "부산광역시 사상구", "전라북도 전주시 덕진구", "전라북도 정읍시", "전라북도 남원시", "전라북도 진안군", "전라북도 고창군", "경상남도 진주시", "경상남도 의령군", "부산광역시 서구", "부산광역시 남구", "부산광역시 사하구", "전라북도 전주시 완산구", "전라북도 임실군", "전라남도 영광군", "전라남도 장성군", "경상남도 창원시 마산합포구", "경상남도 양산시", "경상남도 함안군", "경상남도 산청군", "부산광역시 영도구", "부산광역시 수영구", "전라북도 순창군", "전라남도 담양군", "전라남도 구례군", "전라남도 함평군", "경상남도 창원시 의창구", "경상남도 창원시 성산구", "경상남도 창원시 진해구", "경상남도 김해시", "경상남도 하동군", "광주광역시 광산구", "전라남도 광양시", "전라남도 곡성군", "전라남도 화순군", "전라남도 무안군", "전라남도 신안군", "경상남도 창원시 마산회원구", "경상남도 통영시", "경상남도 사천시", "광주광역시 서구", "광주광역시 북구", "전라남도 목포시", "전라남도 순천시", "전라남도 나주시", "전라남도 고흥군", "경상남도 거제시", "경상남도 고성군", "경상남도 남해군", "광주광역시 동구", "광주광역시 남구", "전라남도 여수시", "전라남도 해남군", "전라남도 영암군", "전라남도 보성군", "전라남도 장흥군", "전라남도 강진군", "전라남도 진도군", "전라남도 완도군", "제주특별자치도 제주시", "제주특별자치도 서귀포시"),
row = c(1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 27),
col = c(8, 9, 10, 11, 8, 5, 4, 7, 6, 10, 11, 9, 6, 7, 4, 5, 8, 9, 10, 11, 7, 6, 4, 9, 10, 5, 8, 12, 11, 7, 8, 9, 6, 4, 5, 10, 12, 11, 7, 8, 5, 6, 9, 2, 4, 3, 10, 11, 12, 7, 8, 5, 6, 9, 2, 3, 4, 10, 11, 12, 5, 6, 7, 2, 3, 8, 4, 9, 10, 11, 12, 6, 5, 7, 3, 9, 8, 4, 10, 11, 12, 14, 5, 2, 3, 8, 6, 7, 10, 9, 4, 11, 12, 2, 3, 1, 7, 6, 5, 4, 8, 13, 11, 10, 12, 9, 7, 5, 6, 8, 3, 4, 2, 1, 13, 10, 9, 11, 12, 8, 7, 6, 9, 5, 2, 3, 4, 13, 11, 12, 10, 6, 13, 5, 8, 9, 7, 3, 2, 4, 11, 10, 12, 10, 9, 11, 6, 13, 12, 7, 8, 4, 5, 3, 11, 9, 10, 6, 5, 12, 13, 7, 8, 4, 3, 12, 11, 13, 9, 10, 5, 3, 4, 6, 7, 8, 11, 10, 13, 12, 4, 5, 6, 3, 9, 8, 7, 12, 11, 9, 10, 4, 3, 6, 5, 2, 7, 8, 10, 12, 11, 4, 5, 2, 3, 9, 8, 7, 6, 11, 12, 4, 3, 5, 2, 7, 8, 9, 10, 6, 3, 6, 4, 5, 2, 1, 8, 9, 7, 3, 4, 1, 5, 2, 6, 9, 8, 7, 4, 3, 5, 1, 2, 4, 3, 2, 1, 3, 6, 6),
stringsAsFactors = FALSE)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
head(state_ranks)
ggplot(state_ranks, aes(variable, rank, fill = variable)) +
geom_col() +
coord_flip() +
theme_bw() +
facet_geo(~ state)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readr)
mygrid <- read_csv("kr_sgg.csv", col_types = cols(code = col_character()))
geofacet::grid_preview(mygrid)
library(readxl)
Presidential_Election_2022 <- read_excel("_posts/geofacet_package/Presidential_Election_2022.xlsx")
View(Presidential_Election_2022)
PV_20 <- read_excel("_posts/geofacet_package/Presidential_Election_2022.xlsx")
View(PV_20)
PE_20 <- PE_20 %>% mutate(A <- 이재명 / (투표수 - 무효투표수),
B <- 윤석열 / (투표수 - 무효투표수),
C <- 심상정 / (투표수 - 무효투표수))
PV_20 <- PV_20 %>% mutate(A <- 이재명 / (투표수 - 무효투표수),
B <- 윤석열 / (투표수 - 무효투표수),
C <- 심상정 / (투표수 - 무효투표수))
View(PV_20)
PV_20_rate <- PV_20 %>% select(c(code, 이재명R, 윤석열R, 심상정R, 구분, 시군구명))
library(tidyverse)
PV_20_rate <- PV_20 %>% select(c(code, 이재명R, 윤석열R, 심상정R, 구분, 시군구명))
PV_20 <- read_excel("_posts/geofacet_package/Presidential_Election_2022.xlsx")
library(readr)
PV_20 <- read_excel("_posts/geofacet_package/Presidential_Election_2022.xlsx")
library(readxl)
PV_20 <- read_excel("_posts/geofacet_package/Presidential_Election_2022.xlsx")
PV_20 <- PV_20 %>% mutate(이재명R <- 이재명 / (투표수 - 무효투표수),
윤석열R <- 윤석열 / (투표수 - 무효투표수),
심상정R <- 심상정 / (투표수 - 무효투표수))
PV_20_rate <- PV_20 %>% select(c(code, 이재명R, 윤석열R, 심상정R, 구분, 시군구명))
View(PV_20)
PV_20 <- PV_20 %>% mutate(이재명R = 이재명 / (투표수 - 무효투표수),
윤석열R = 윤석열 / (투표수 - 무효투표수),
심상정R = 심상정 / (투표수 - 무효투표수))
PV_20 <- read_excel("_posts/geofacet_package/Presidential_Election_2022.xlsx")
PV_20 <- PV_20 %>% mutate(이재명R = 이재명 / (투표수 - 무효투표수),
윤석열R = 윤석열 / (투표수 - 무효투표수),
심상정R = 심상정 / (투표수 - 무효투표수))
PV_20_rate <- PV_20 %>% select(c(code, 이재명R, 윤석열R, 심상정R, 구분, 시군구명))
PV_20_final <- PV_20_rate %>% gather(key = "후보", value = "득표율", 이재명R, 윤석열R, 심상정R)
View(PV_20_final)
library(showtext)
font_add("BM", "/Users/hm/R_study/R_Visual/font/BMYEONSUNG.ttf")
font_add("Cinema_T", "/Users/hm/R_study/R_Visual/font/aCinemaB.ttf")
font_add("Cinema_C", "/Users/hm/R_study/R_Visual/font/aCinemaM.ttf")
font_add("XKCD", "/Users/hm/R_study/R_Visual/font/xkcd-Regular.otf")
font_add("Lato", "/Users/hm/R_study/R_Visual/font/Lato-Regular.ttf")
font_add("Noto_B", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Bold.otf")
font_add("Noto_M", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Medium.otf")
font_add("Noto_R", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Regular.otf")
font_add("NanumBP_R", "/Users/hm/R_study/R_Visual/font/NanumBarunpenR.ttf")
font_add("NanumBP_B", "/Users/hm/R_study/R_Visual/font/NanumBarunpenB.ttf")
font_add("DIN", "/Users/hm/R_study/R_Visual/font/D-DIN.otf")
font_add("DIN_B", "/Users/hm/R_study/R_Visual/font/DIN Bold.otf")
showtext_auto()
mabunews_style <- function() {
ggplot2::theme(
plot.caption = element_blank(),
#마부뉴스때는 배경 하얀색으로 가자
#plot.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
#plot.background = element_rect(fill = "#fafafa", color = "#fafafa"), # 이게 디폴트
plot.background = element_rect(fill = "white", color = "white"),
plot.margin = margin(10, 5.5, 10, 5.5),
# 타이틀도 영어면 DIN 쓴다
#plot.title = element_text(family = "DIN_B", size = 15),
#plot.subtitle = element_text(family = "DIN", size = 12),
plot.title = element_text(family = "Noto_M", size = 15),
plot.subtitle = element_text(family = "Noto_R", size = 12),
axis.title = element_blank(),
axis.text = element_text(family = "Noto_R", size = 10, color = "#222222"),
axis.ticks = element_line(color = "#dfdfe0"),
# tick 여부에 따라 왔다갔다
#axis.ticks.x = element_blank(),
axis.line = element_blank(),
panel.grid.minor = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.major.y = element_line(color = "#dfdfe0"),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill = "#e4e6e8"),
#strip.text = element_text(size = 12, hjust = 0),
strip.text = element_text(size = 12, family = "Noto_R", colour = "black"),
# 축 항목이 숫자인경우에는 DIN / 아니면 Noto_R으로 할것 -> 숫자로만 축을 구성하고 단위는 우상단에 위치?
axis.text.x = element_text(family = "DIN", colour = "black", size = 10),
axis.text.y = element_text(family = "Noto_R", colour = "black", size = 10),
#axis.text.x = element_blank(),
#axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "bottom", #none, top, bottom, right, left, c(x, y)
legend.direction = "horizontal",
legend.title = element_text(family = "Noto_R", size = 8), #element_blank(),
legend.text = element_text(family = "Noto_R", size = 8),
#legend.key = element_rect(fill = "#fafafa", colour = "#fafafa"),
#legend.background = element_rect(fill = "#fafafa")
legend.key = element_rect(fill = "white", colour = "white"),
legend.background = element_rect(fill = "white")
)
}
knitr::opts_chunk$set(echo = FALSE)
PE_20_final$후보 <- as.factor(PE_20_final, level = c("윤석열R", "이재명R", "심상정R"))
View(PV_20_rate)
PV_20_rate %>% pivot_longer(cols = c("code", "구분", "시군구명"), names_to = c("이재명R", "윤석열R", "심상정R"), values_to = "득표율"  )
library(dplyr)
PV_20_rate %>% pivot_longer(cols = c("code", "구분", "시군구명"), names_to = c("이재명R", "윤석열R", "심상정R"), values_to = "득표율"  )
library(tidyr)
PV_20_rate %>% pivot_longer(cols = c("code", "구분", "시군구명"), names_to = c("이재명R", "윤석열R", "심상정R"), values_to = "득표율"  )
PV_20_rate %>% pivot_longer(cols = "code", names_to = c("이재명R", "윤석열R", "심상정R"), values_to = "득표율"  )
PV_20_rate %>% pivot_longer(cols = c("code", "구분", "시군구명"), names_to = 심상정R", values_to = "득표율"  )
PV_20_rate %>% pivot_longer(cols = c("code", "구분", "시군구명"), names_to = "심상정R", values_to = "득표율"  )
PV_20_rate %>% pivot_longer(cols = ends_with("R"),
names_to = "후보",
values_to = "득표율")
