font_add("Cinema_T", "/Users/hm/R_study/R_Visual/font/aCinemaB.ttf")
font_add("Cinema_C", "/Users/hm/R_study/R_Visual/font/aCinemaM.ttf")
font_add("XKCD", "/Users/hm/R_study/R_Visual/font/xkcd-Regular.otf")
font_add("Lato", "/Users/hm/R_study/R_Visual/font/Lato-Regular.ttf")
font_add("Noto_B", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Bold.otf")
font_add("Noto_M", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Medium.otf")
font_add("Noto_R", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Regular.otf")
font_add("NanumBP_R", "/Users/hm/R_study/R_Visual/font/NanumBarunpenR.ttf")
font_add("NanumBP_B", "/Users/hm/R_study/R_Visual/font/NanumBarunpenB.ttf")
font_add("DIN", "/Users/hm/R_study/R_Visual/font/D-DIN.otf")
font_add("DIN_B", "/Users/hm/R_study/R_Visual/font/DIN Bold.otf")
showtext_auto()
mabunews_style <- function() {
ggplot2::theme(
plot.caption = element_blank(),
#마부뉴스때는 배경 하얀색으로 가자
#plot.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
#plot.background = element_rect(fill = "#fafafa", color = "#fafafa"), # 이게 디폴트
plot.background = element_rect(fill = "white", color = "white"),
plot.margin = margin(10, 5.5, 10, 5.5),
# 타이틀도 영어면 DIN 쓴다
#plot.title = element_text(family = "DIN_B", size = 15),
#plot.subtitle = element_text(family = "DIN", size = 12),
plot.title = element_text(family = "Noto_M", size = 15),
plot.subtitle = element_text(family = "Noto_R", size = 12),
axis.title = element_blank(),
axis.text = element_text(family = "Noto_R", size = 10, color = "#222222"),
axis.ticks = element_line(color = "#dfdfe0"),
# tick 여부에 따라 왔다갔다
#axis.ticks.x = element_blank(),
axis.line = element_blank(),
panel.grid.minor = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.major.y = element_line(color = "#dfdfe0"),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill = "#e4e6e8"),
#strip.text = element_text(size = 12, hjust = 0),
strip.text = element_text(size = 12, family = "Noto_R", colour = "black"),
# 축 항목이 숫자인경우에는 DIN / 아니면 Noto_R으로 할것 -> 숫자로만 축을 구성하고 단위는 우상단에 위치?
axis.text.x = element_text(family = "DIN", colour = "black", size = 10),
axis.text.y = element_text(family = "Noto_R", colour = "black", size = 10),
#axis.text.x = element_blank(),
#axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "bottom", #none, top, bottom, right, left, c(x, y)
legend.direction = "horizontal",
legend.title = element_text(family = "Noto_R", size = 8), #element_blank(),
legend.text = element_text(family = "Noto_R", size = 8),
#legend.key = element_rect(fill = "#fafafa", colour = "#fafafa"),
#legend.background = element_rect(fill = "#fafafa")
legend.key = element_rect(fill = "white", colour = "white"),
legend.background = element_rect(fill = "white")
)
}
PE_20_final$후보 <- factor(PE_20_final$후보, levels = c("심상정R", "윤석열R", "이재명R"))
distill::create_post("palmerpenguins_package")
library(dplyr)
library(tidyr)
PE_20_final <- PE_20_rate %>% gather(key = "후보", value = "득표율", 이재명R, 윤석열R, 심상정R)
library(dplyr)
PE_20 <- PE_20 %>% mutate(이재명R = 이재명 / (투표수 - 무효투표수),
윤석열R = 윤석열 / (투표수 - 무효투표수),
심상정R = 심상정 / (투표수 - 무효투표수))
library(readxl)
library(tibble)
PE_20 <- read_excel("Presidential_Election_2022.xlsx")
PE_20 <- as.tibble(PE_20)
head(PE_20)
library(dplyr)
PE_20 <- PE_20 %>% mutate(이재명R = 이재명 / (투표수 - 무효투표수),
윤석열R = 윤석열 / (투표수 - 무효투표수),
심상정R = 심상정 / (투표수 - 무효투표수))
PE_20_rate <- PE_20 %>% select(c(code, 이재명R, 윤석열R, 심상정R, 구분, 시군구명))
head(PE_20_rate)
library(dplyr)
library(tidyr)
PE_20_final <- PE_20_rate %>% gather(key = "후보", value = "득표율", 이재명R, 윤석열R, 심상정R)
head(PE_20_final)
PE_20_final2 <- PE_20_rate %>% pivot_longer(cols = ends_with("R"),
names_to = "후보",
values_to = "득표율")
head(PE_20_final2)
library(tidyverse)
library(showtext)
font_add("BM", "/Users/hm/R_study/R_Visual/font/BMYEONSUNG.ttf")
font_add("Cinema_T", "/Users/hm/R_study/R_Visual/font/aCinemaB.ttf")
font_add("Cinema_C", "/Users/hm/R_study/R_Visual/font/aCinemaM.ttf")
font_add("XKCD", "/Users/hm/R_study/R_Visual/font/xkcd-Regular.otf")
font_add("Lato", "/Users/hm/R_study/R_Visual/font/Lato-Regular.ttf")
font_add("Noto_B", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Bold.otf")
font_add("Noto_M", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Medium.otf")
font_add("Noto_R", "/Users/hm/R_study/R_Visual/font/NotoSansKR-Regular.otf")
font_add("NanumBP_R", "/Users/hm/R_study/R_Visual/font/NanumBarunpenR.ttf")
font_add("NanumBP_B", "/Users/hm/R_study/R_Visual/font/NanumBarunpenB.ttf")
font_add("DIN", "/Users/hm/R_study/R_Visual/font/D-DIN.otf")
font_add("DIN_B", "/Users/hm/R_study/R_Visual/font/DIN Bold.otf")
showtext_auto()
mabunews_style <- function() {
ggplot2::theme(
plot.caption = element_blank(),
#마부뉴스때는 배경 하얀색으로 가자
#plot.background = element_rect(fill = "#f0f0f0", color = "#f0f0f0"),
#plot.background = element_rect(fill = "#fafafa", color = "#fafafa"), # 이게 디폴트
plot.background = element_rect(fill = "white", color = "white"),
plot.margin = margin(10, 5.5, 10, 5.5),
# 타이틀도 영어면 DIN 쓴다
#plot.title = element_text(family = "DIN_B", size = 15),
#plot.subtitle = element_text(family = "DIN", size = 12),
plot.title = element_text(family = "Noto_M", size = 15),
plot.subtitle = element_text(family = "Noto_R", size = 12),
axis.title = element_blank(),
axis.text = element_text(family = "Noto_R", size = 10, color = "#222222"),
axis.ticks = element_line(color = "#dfdfe0"),
# tick 여부에 따라 왔다갔다
#axis.ticks.x = element_blank(),
axis.line = element_blank(),
panel.grid.minor = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.major.y = element_line(color = "#dfdfe0"),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill = "#e4e6e8"),
#strip.text = element_text(size = 12, hjust = 0),
strip.text = element_text(size = 12, family = "Noto_R", colour = "black"),
# 축 항목이 숫자인경우에는 DIN / 아니면 Noto_R으로 할것 -> 숫자로만 축을 구성하고 단위는 우상단에 위치?
axis.text.x = element_text(family = "DIN", colour = "black", size = 10),
axis.text.y = element_text(family = "Noto_R", colour = "black", size = 10),
#axis.text.x = element_blank(),
#axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "bottom", #none, top, bottom, right, left, c(x, y)
legend.direction = "horizontal",
legend.title = element_text(family = "Noto_R", size = 8), #element_blank(),
legend.text = element_text(family = "Noto_R", size = 8),
#legend.key = element_rect(fill = "#fafafa", colour = "#fafafa"),
#legend.background = element_rect(fill = "#fafafa")
legend.key = element_rect(fill = "white", colour = "white"),
legend.background = element_rect(fill = "white")
)
}
PE_20_final2$후보 <- factor(PE_20_final2$후보, levels = c("심상정R", "윤석열R", "이재명R"))
data_11110 <- PE_20_final2 %>% filter(code == 11110)
ggplot(data_11110, aes(x = 후보, y = 득표율, fill = 후보)) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#F7EF99", "#fc7b84", "#008EC6")) +
mabunews_style()
library(geofacet)
ggplot(subset(PE_20_final, 후보 != "심상정R"), aes(x = 후보, y = 득표율, fill = 후보)) +
geom_col() +
coord_flip() +
scale_fill_manual(values = c("#fc7b84", "#008EC6")) +
facet_geo(~ code, grid = mygrid) +
mabunews_style() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
axis.text.y = element_blank()
) +
scale_y_continuous(breaks = c(.5, 1), limits = c(0, 1))
library(tidyverse)
ggplot(data.frame(x = c(0, 5)), aes(x)) +
stat_function(fun = df,
geom = "area",
fill = "steelblue",
args = list(
df1 = 3,
df2 = 47
))
ggplot(data.frame(x = c(0, 5)), aes(x= x)) +
stat_function(fun = df,
geom = "area",
fill = "steelblue",
args = list(
df1 = 3,
df2 = 47
))
ggplot(data.frame(X = c(0, 5)), aes(x = X)) +
stat_function(fun = df,
geom = "line",
fill = "steelblue",
args = list(
df1 = 3,
df2 = 47
))
ggplot(data.frame(X = c(0, 5)), aes(x = X)) +
stat_function(fun = df,
geom = "line",
args = list(
df1 = 3,
df2 = 47
))
??stat_function
library(readr)
total <- read_csv("_posts/palmerpenguins_package/total.csv")
View(total)
library(tidyverse)
head(total)
f <- function(r) {
if(r == 0) i = 0
else if(0 < r <= .20) i = 1
else if(.20 < r <= .40) i = 2
else if(.40 < r <= .60) i = 3
else if(.60 < r <= .80) i = 4
else if(.80 < r <= 1) i = 5
}
f = function(r) {
if(r == 0) i = 0
else if(0 < r <= .20) i = 1
else if(.20 < r <= .40) i = 2
else if(.40 < r <= .60) i = 3
else if(.60 < r <= .80) i = 4
else if(.80 < r <= 1) i = 5
}
if(r == 0) i = 0,
else if(0 < r <= .20) i = 1,
else if(.20 < r <= .40) i = 2,
else if(.40 < r <= .60) i = 3,
else if(.60 < r <= .80) i = 4,
else if(.80 < r <= 1) i = 5
f=function(m,d){
if(m==12 && d>=21) i=3
else if(m>9 || (m==9 && d>=21)) i=2
else if(m>6 || (m==6 && d>=21)) i=1
else if(m>3 || (m==3 && d>=21)) i=0
else i=3
}
f = function(r){
if(r == 0) i = 0,
else if(0 < r <= .20) i = 1
else if(.20 < r <= .40) i = 2
else if(.40 < r <= .60) i = 3
else if(.60 < r <= .80) i = 4
else i = 5
}
f = function(r){
if(r == 0) i = 0
else if(0 < r <= .20) i = 1
else if(.20 < r <= .40) i = 2
else if(.40 < r <= .60) i = 3
else if(.60 < r <= .80) i = 4
else i = 5
}
f = function(r){
if(r == 0) i = 0
else if(0 < r && r <= .20) i = 1
else if(.20 < r && r <= .40) i = 2
else if(.40 < r && r <= .60) i = 3
else if(.60 < r && r <= .80) i = 4
else i = 5
}
f = function(r){
if(r == 0) i = 0
else if(0 < r && r <= .20) i = 1
else if(.20 < r && r <= .40) i = 2
else if(.40 < r && r <= .60) i = 3
else if(.60 < r && r <= .80) i = 4
else if(.80 < r) i = 5
}
total$label <- factor(
mapply(f, total$openrate),
levels = 0:5,
labels = c("0%", "0~20%", "20~40%", "40~60%", "60~80%", "80~100%")
)
library(dplyr)
total$letter <- total$`letter_data$ID[i]`
total %>% group_by(letter, label) %>% tally()
sub_dash <- total %>% group_by(letter, label) %>% tally()
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity")
sub_dash$letter <- as.character(sub_dash$letter)
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity")
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "fill", stat = "identity")
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity")
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "fill", stat = "identity")
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity")
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity") +
facet_wrap(~label)
library(wesanderson)
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity") +
facet_wrap(~label) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity") +
#facet_wrap(~label) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity") +
#facet_wrap(~label) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_minimal()
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity") +
#facet_wrap(~label) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "stack", stat = "identity") +
#facet_wrap(~label) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "fill", stat = "identity") +
#facet_wrap(~label) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "fill", stat = "identity") +
facet_wrap(~label) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "fill", stat = "identity") +
#facet_wrap(~label) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f = function(r){
if(r == 0) i = 5
else if(0 < r && r <= .20) i = 4
else if(.20 < r && r <= .40) i = 3
else if(.40 < r && r <= .60) i = 2
else if(.60 < r && r <= .80) i = 1
else if(.80 < r) i = 0
}
total$label <- factor(
mapply(f, total$openrate),
levels = 0:5,
labels = c("0%", "0~20%", "20~40%", "40~60%", "60~80%", "80~100%")
)
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "fill", stat = "identity") +
#facet_wrap(~label) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
sub_dash <- total %>% group_by(letter, label) %>% tally()
sub_dash$letter <- as.character(sub_dash$letter)
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "fill", stat = "identity") +
#facet_wrap(~label) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f = function(r){
if(r == 0) i = 0
else if(0 < r && r <= .20) i = 1
else if(.20 < r && r <= .40) i = 2
else if(.40 < r && r <= .60) i = 3
else if(.60 < r && r <= .80) i = 4
else if(.80 < r) i = 5
}
total$label <- factor(
mapply(f, total$openrate),
levels = 0:5,
labels = c("0%", "0~20%", "20~40%", "40~60%", "60~80%", "80~100%")
)
total$letter <- total$`letter_data$ID[i]`
sub_dash <- total %>% group_by(letter, label) %>% tally()
sub_dash$letter <- as.character(sub_dash$letter)
ggplot(sub_dash, aes(fill = label, x = letter, y = n)) +
geom_bar(position = "fill", stat = "identity") +
#facet_wrap(~label) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
total %>% filter(letter == "949703" && label == "80~100%")
total %>% filter(letter == "949703" & && label == "80~100%")
total %>% filter(letter == "949703" & label == "80~100%")
total %>% filter(letter == "949703" & label == "80~100%") %>% View()
total %>% filter(letter == "949703" & label == "0~20%") %>% View()
total %>% filter(letter == "949703" & label == "0~20%") %>% group_by(open) %>% tally()
total %>% filter(letter == "949703" & label == "0~20%") %>% group_by(n) %>% tally()
total %>%
filter(letter == "949703" & label == "0~20%") %>%
group_by(n) #%>%
total %>%
filter(letter == "949703" & label == "0~20%") %>%
group_by(n) %>%
tally() %>%
ggplot(., aes(x = n, y = nn)) +
geom_bar(stat = "identity")
total %>%
filter(letter == "949703" & label == "0~20%") %>%
group_by(n) %>%
tally() %>% View()
ggplot(., aes(x = n, y = nn)) +
geom_bar(stat = "identity")
total %>%
filter(letter == "949703" & label == "80~100%") %>%
group_by(n) %>%
tally() %>%
ggplot(., aes(x = n, y = nn)) +
geom_bar(stat = "identity")
library(palmerpenguinspackage)
library(palmerpenguin)
library(palmerpenguins)
install.packages("palmerpenguins")
library(palmerpenguins)
palmerpenguins::penguins_raw
palmerpenguins::penguins
total %>%
filter(letter == "949703" & label == "80~100%") %>%
group_by(n) %>%
tally() %>% View()
23 / 22 / 62
install.packages(sjPlot)
library(sjPlot)
install.packages("sjPlot")
knitr::opts_chunk$set(echo = FALSE)
install.packages("sjPlot")
library(sjPlot)
library(sjPlot)
install.packages("nloptr")
install.packages("sjPlot")
library(sjPlot)
dist_f(deg.f1 = 2, deg.f2 = 5)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_sjplot()
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_sjplot2()
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_sjplot()
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) #+
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_sjplot()
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blank()
install.packages("sjPlot")
library(sjPlot)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blank()
install.packages("sjPlot")
library(sjPlot)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blank()
library(sjPlot)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blank()
knitr::opts_chunk$set(echo = FALSE)
library(sjPlot)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blank()
library(sjPlot)
p <- dist_f(f = 2, deg.f1 = 6, deg.f2 = 45)
p +  theme_blank()
library(sjPlot)
theme_blank(dist_f(f = 2, deg.f1 = 6, deg.f2 = 45))
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blank()
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blank()
library(sjPlot)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_538()
library(sjPlot)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_538()
library(sjPlot)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blnak()
library(sjPlot)
dist_f(f = 2, deg.f1 = 6, deg.f2 = 45) +
theme_blank()
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
stat_function(fun=df, args=list(df1=5, df2=10), colour="purple", size=1)
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
stat_function(fun=df, args=list(df1=5, df2=10), colour="purple", size=1)
ggplot(data.frame(x = c(0,5)), aes(x=x)) +
stat_function(fun = df, args = list(df1 = 5, df2 = 10), colour="purple", size=1)
ggplot(data.frame(x = c(0, 5)), aes(x)) +
stat_function(fun = df,
geom = "area",
fill = "steelblue",
args = list(
df1 = 3,
df2 = 47
))
df(x, df1, df2, ncp, log = FALSE)
ggplot(data.frame(x = c(0, 5)), aes(x)) +
stat_function(fun = "df",
geom = "area",
fill = "steelblue",
args = list(
df1 = 3,
df2 = 47
))
ggplot(data.frame(x = c(0,5)), aes(x=x)) +
stat_function(fun = "df", args = list(df1 = 5, df2 = 10), size = 1) +
theme_minimal()
ggplot(data.frame(x = c(0,5)), aes(x=x)) +
stat_function(fun = "df", args = list(df1 = 5, df2 = 10), size = 1) +
theme_classic()
library(tidyverse)
ggplot(data.frame(x = c(0, 5)), aes(x = x)) +
stat_function(fun = "df", args = list(df1 = 5, df2 = 10), size = 1) +
theme_classic()
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
ggplot(data.frame(x = c(0, 5)), aes(x = x)) +
stat_function(fun = "df", args = list(df1 = 5, df2 = 10), size = 1) +
theme_classic()
palmerpenguins::penguins
unique(penguins$island)
